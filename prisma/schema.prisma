// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Patient {
  Id            Int            @id @default(autoincrement())
  Name          String         @db.VarChar(50)
  Gender        String         @db.Char(1)
  PhoneNumber   String         @db.VarChar(15)
  Email         String         @db.VarChar(50)
  BloodType     String         @db.Char(2)
  BirthDate     DateTime       @db.Date
  Address       String         @db.VarChar(255)
  MedicalRecord MedicalRecord?
  Appointments  Appointment[]
}

model Room {
  Id           Int          @id @default(autoincrement())
  Name         String       @db.VarChar(255)
  Appointments Appointment[]
}

model Disease {
  Id             Int             @id @default(autoincrement())
  Name           String          @db.VarChar(255)
  MedicalRecords MedicalRecord[]
}

model MedicalRecord {
  Id        Int       @id @default(autoincrement())
  Patient   Patient   @relation(fields: [PatientID], references: [Id])
  PatientID Int       @unique
  StartDate DateTime  @db.Date
  EndDate   DateTime  @db.Date
  Diagnosis String
  Note      String
  Treatment String
  Diseases  Disease[]
}

model Doctor {
  Id            Int            @id @default(autoincrement())
  DoctorName    String         @db.VarChar(255)
  Email         String         @db.VarChar(255)
  MobileNumber  String         @db.VarChar(255)
  SpecialistId  Int            
  StartDuty     String         @db.VarChar(25)
  EndDuty       String         @db.VarChar(25)
  Appointments  Appointment[]

  Specialist    DoctorSpecialList @relation(fields: [SpecialistId], references: [Id])
}

model DoctorSpecialList {
  Id    Int     @id @default(autoincrement())
  Name  String  @db.VarChar(225)
  Description  String  @db.VarChar(225)
  Doctors Doctor[] 
}

model Appointment {
  Id              Int       @id @default(autoincrement())
  PatientId       Int
  DoctorId        Int
  AppointmentDate DateTime  @db.Date
  RoomId          Int
  TokenId         String    @db.Uuid @default(uuid())
  Status          String    @db.VarChar(255)
  IsCancel        Boolean
  
  // Relationships
  Patient         Patient   @relation(fields: [PatientId], references: [Id])
  Doctor          Doctor    @relation(fields: [DoctorId], references: [Id])
  Room            Room      @relation(fields: [RoomId], references: [Id])
}